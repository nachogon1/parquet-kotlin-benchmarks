/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.jvm)

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3")
    // Logging with SLF4J
    implementation("org.slf4j:slf4j-api:1.7.5")
    implementation("org.slf4j:slf4j-log4j12:1.7.5")

    // Parquet and Avro dependencies for working with Parquet files
    implementation("org.apache.parquet:parquet-avro:1.12.0")
    implementation("org.apache.avro:avro:1.10.2")

    // Guava for utilities
    implementation("com.google.guava:guava:11.0.2")

    // Hadoop dependencies for S3 file handling
    implementation("org.apache.hadoop:hadoop-client:3.3.0")
    implementation("org.apache.hadoop:hadoop-aws:3.3.0")
    implementation("org.apache.hadoop:hadoop-common:3.3.0")

    // AWS SDK v2 for working with S3
    implementation("software.amazon.awssdk:s3:2.20.0")
    implementation("software.amazon.awssdk:core:2.20.0")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.x.x") // Replace with the latest version


    // Jackson for JSON deserialization
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.15.0")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.15.0")
    implementation("com.fasterxml.jackson.core:jackson-core:2.15.0")

    // Use the JUnit 5 integration.
    testImplementation(libs.junit.jupiter.engine)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
//java {
//    toolchain {
//        languageVersion = JavaLanguageVersion.of(21)
//    }
//}

application {
    // Define the main class for the application.
    mainClass = "org.example.AppKt"
}
